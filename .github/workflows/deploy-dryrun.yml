name: deploy-dryrun

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environnement cible (ex: demo)"
        default: "demo"
        required: true
        type: string
      dry_run:
        description: "Simuler le déploiement (true/false)"
        default: "true"
        required: true
        type: choice
        options: [ "true", "false" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DRY_RUN: ${{ inputs.dry_run }}
      ENVIRONMENT: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- BACKEND (api) ----------
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
          cache-dependency-path: api/pom.xml

      - name: Build backend (JAR)
        working-directory: api
        run: mvn -B -DskipTests=false verify

      - name: Collect backend artifact
        run: |
          mkdir -p out
          JAR=$(ls api/target/*.jar | head -n1 || true)
          if [ -n "$JAR" ]; then
            cp "$JAR" out/app-backend.jar
          else
            echo "ERROR: aucun JAR trouvé dans api/target" >&2
            exit 1
          fi

      # ---------- FRONTEND (CESIZen-front) ----------
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: CESIZen-front/package-lock.json

      - name: Install deps (frontend)
        working-directory: CESIZen-front
        run: npm ci

      - name: Build frontend
        working-directory: CESIZen-front
        run: npm run build

      - name: Pack frontend dist
        run: |
          mkdir -p out
          tar -czf out/frontend-dist.tgz -C CESIZen-front/dist .

      # ---------- DRY RUN DEPLOY ----------
      - name: Show planned deploy commands (dry-run)
        run: |
          echo "=== DRY-RUN: ${DRY_RUN} ==="
          echo "Cible: ${ENVIRONMENT}"
          echo "[SIMULATION] Copie des artefacts sur le serveur"
          echo " - app-backend.jar  -> /opt/cesizen/api/app.jar"
          echo " - frontend-dist.tgz-> /opt/cesizen/front/dist.tgz"
          echo "[SIMULATION] Décompression du front et relance des services (docker compose up -d)"

      # ---------- ARTEFACTS ----------
      - name: Upload deployables
        uses: actions/upload-artifact@v4
        with:
          name: deployables-${{ inputs.environment }}
          path: out/*
